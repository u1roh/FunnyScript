out := System.Console.WriteLine;

a := mutable 1;
do out ("a = {0}", a);

do a <- 123;
do out ("a = {0}", a);

do
  System.Text.StringBuilder.new()
  |> .Append "Hello "
  |> .Append "World, "
  |> .Append "Hello "
  |> .Append "FunnyScript!"
  |> .ToString()
  |> str -> out ("str = {0}", str);

// 末尾再帰の確認用の無限ループ
iter := n ->
	do ? n % 100 == 0 => System.Console.WriteLine n | ();
	iter (n + 1);
//do iter 0;

f := () -> System.Console.WriteLine "hello";
do f();

a := 3;
b := ? a % 2 == 0 => "even" | "odd";
do trace b;

fizzbuzz := n ->
	|? n % 3 == 0 && n % 5 == 0 => "FizzBuzz"
	|? n % 3 == 0 => "Fizz"
	|? n % 5 == 0 => "Buzz"
	| n;

do System.Console.WriteLine (fizzbuzz 6);
do System.Console.WriteLine (fizzbuzz 10);
do System.Console.WriteLine (fizzbuzz 30);
do System.Console.WriteLine (fizzbuzz 7);

a := { name := "u1roh"; age := 40; };
do System.Console.WriteLine ("name = {0}, age = {1}", a.name, a.age);

Calc := {
  add := x -> y -> x + y;
  sub := x -> y -> x - y;
};
do System.Console.WriteLine ("add: {0}", Calc.add 7 9);
do System.Console.WriteLine ("sub: {0}", Calc.sub 8 2);

add := (x, y) -> x + y;
a := add (10, 20);
do trace a;

fac := n -> ? n == 0 => 1 | n * fac (n - 1);	// 階乗計算
do fac 4 |> trace;
do fac 5 |> trace;

f := a -> b -> a + 2 * (b + 4);
do f 1 2 |> trace;

fac := n -> ? n == 0 => 1 | (m := n; m * fac (n - 1));
do fac 3 |> trace;

iter := f -> ls -> f ls.head;
do [1, 2] |> iter trace;

iter := f -> ls ->
	? ls.isEmpty => () | do f ls.head; iter f ls.tail;

iter2 := f -> ls ->
	|? ls.isEmpty => () 
	|  do f ls.head; iter2 f ls.tail;

do [1, 2] |> iter trace;
do iter trace [3, 1, 5, 2];

do [9, 8, 7, 6] |> iter trace;
do [9, 8, 7, 6] |> iter System.Console.WriteLine;
do [2, 4, 6, 8] |> .foreach System.Console.WriteLine;
do [1, 3, 5, 7] |> .foreach (x -> System.Console.WriteLine x);

g := x ->
	|? x < 0 => "negative"
	|? x > 0 => "positive"
	| "zero";

do g -13 |> trace;
do g 100 |> trace;
do g 0   |> trace;

s := System.Console.ReadLine();
do System.Console.WriteLine s;

trace "end"
